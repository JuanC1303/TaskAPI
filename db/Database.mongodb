// MongoDB Playground
// To disable this template go to Settings | MongoDB | Use Default Template For Playground.
// Make sure you are connected to enable completions and to be able to run a playground.
// Use Ctrl+Space inside a snippet or a string literal to trigger completions.

// Select the database to use.
use('mongodbVSCodePlaygroundDB');

// The drop() command destroys all data from a collection.
// Make sure you run it against the correct database and collection.
db.sales.drop();

// Insert a few documents into the sales collection.
db.users.insertMany([
	{'ID': 1, 'Name': "Juan", 'Lastname': "Ayala", 'Age': 24},
	{'ID': 2, 'Name': "Carlos", 'Lastname': "Cortes", 'Age': 41},
	{'ID': 3, 'Name': "Kevin", 'Lastname': "Caceres", 'Age': 25},
	{'ID': 4, 'Name': "Tere", 'Lastname': "Aceves", 'Age': 62},
	{'ID': 5, 'Name': "Saul", 'Lastname': "Sanabria", 'Age': 29},
	{'ID': 6, 'Name': "Brenda", 'Lastname': "Jimenez", 'Age': 36},
	{'ID': 7, 'Name': "Luis", 'Lastname': "Becerra", 'Age': 41},
    ]);

// Run a find command to view items sold on April 4th, 2014.
db.sales.find({ date: { $gte: new Date('2014-04-04'), $lt: new Date('2014-04-05') } });

// Build an aggregation to view total sales for each product in 2014.
const aggregation = [
  { $match: { date: { $gte: new Date('2014-01-01'), $lt: new Date('2015-01-01') } } },
  { $group: { _id: '$item', totalSaleAmount: { $sum: { $multiply: [ '$price', '$quantity' ] } } } }
];

// Run the aggregation and open a cursor to the results.
// Use toArray() to exhaust the cursor to return the whole result set.
// You can use hasNext()/next() to iterate through the cursor page by page.
db.sales.aggregate(aggregation);
